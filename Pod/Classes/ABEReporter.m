//
//  ABEReporter.m
//  nettdating
//
//  Created by Nikolai Johan Heum on 24.05.15.
//  Copyright (c) 2015 Abello. All rights reserved.
//

// Helpers
#import "ABEReporter.h"
#import "ABEImgurAPIClient.h"

// View Controllers
#import "ABEReporterViewController.h"

@interface ABEReporter ()

@property (nonatomic, weak) ABEReporterViewController *reporterViewController;
@property (nonatomic) UIImage *autogeneratedScreenshot;

@end

@implementation ABEReporter

+ (instancetype)reporter {
    static ABEReporter *_sharedInstance;
    static dispatch_once_t onceToken;
    
    dispatch_once(&onceToken, ^{
        _sharedInstance = [[self alloc] init];
        _sharedInstance.enabled = YES;
    });
    
    return _sharedInstance;
}

+ (NSDateFormatter *)dateFormatter {
    static dispatch_once_t onceMark;
    static NSDateFormatter *formatter = nil;
    
    dispatch_once(&onceMark, ^{
        formatter = [NSDateFormatter new];
        [formatter setTimeZone:[NSTimeZone timeZoneWithName:@"UTC"]];
        [formatter setDateFormat:@"yyyy-MM-dd'T'HH:mm:ss.SSSSSS"];
    });
    
    return formatter;
}

+ (void)setupWithRepositoryName:(NSString *)reponame gitHubAccessToken:(NSString *)githubAccessToken {
    [self setupWithRepositoryName:reponame gitHubAccessToken:githubAccessToken imgurClientID:nil];
}

+ (void)setupWithRepositoryName:(NSString *)reponame gitHubAccessToken:(NSString *)githubAccessToken imgurClientID:(NSString *)imgurAccessToken {
    [ABEGithubAPIClient sharedClient].repositoryName = reponame;
    [[ABEGithubAPIClient sharedClient] setGithubAPIKey:githubAccessToken];
    [[ABEImgurAPIClient sharedClient] setImgurAPIKey:imgurAccessToken];
    
    [self reporter]; // Trigger the creation of the reporter object
}

- (instancetype)init {
    self = [super init];
    
    if (self) {
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(showReporterView) name:kABESHakeNotificationName object:nil];
    }
    
    return self;
}

- (void)dealloc {
    [[NSNotificationCenter defaultCenter] removeObserver:self forKeyPath:kABESHakeNotificationName];
}

- (void)showReporterView {
    if (self.reporterViewController || !self.isEnabled) { // Do not present if we are already on screen or disabled
        return;
    }
    
    ABEReporterViewController *reporterController = [ABEReporterViewController instance];
    UINavigationController *navigationController = [[UINavigationController alloc] initWithRootViewController:reporterController];
    self.reporterViewController = reporterController;
    
    UIWindow *window = [[[UIApplication sharedApplication] delegate] window];
    [self presentReportComposer:navigationController inViewController:[window rootViewController]];
}

/**
 *  Present the report composer on the very topmost view controller as a modal presentation
 *
 *  @param composerController The controller to present
 *  @param rootViewController The canidate that we might present on
 */
- (void)presentReportComposer:(UIViewController *)composerController inViewController:(UIViewController *)rootViewController {
    if (rootViewController.presentedViewController) {
        [self presentReportComposer:composerController inViewController:rootViewController.presentedViewController];
    } else {
        [rootViewController presentViewController:composerController animated:YES completion:nil];
    }
}

- (NSMutableDictionary *)extraInfoForIssue {
    NSMutableDictionary *extraInfo = [@{@"App Version : " : [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"],
                                        @"Bundle Version : " : [[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleVersion"],
                                        @"Current Localization : " : [NSLocale preferredLanguages][0],
                                        @"Current Device : " : [[UIDevice currentDevice] model],
                                        @"iOS Version : " : [[UIDevice currentDevice] systemVersion]} mutableCopy];
    
    [extraInfo addEntriesFromDictionary:[self.delegate extraDebuggingInformationForIssue]];
    return extraInfo;
}

@end
